{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\Portal\\\\my-app\\\\src\\\\LabelPrinter.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LabelPrinter = () => {\n  _s();\n  const [labelData, setLabelData] = useState([]);\n  const [printerIp, setPrinterIp] = useState(''); // State to hold printer IP\n\n  useEffect(() => {\n    // Fetch label data from the API\n    const fetchLabelData = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/label_data');\n        setLabelData(response.data);\n      } catch (error) {\n        console.error('Error fetching label data:', error);\n      }\n    };\n    fetchLabelData();\n  }, []);\n  const printLabel = item => {\n    // Create ZPL code with the item data\n    const zpl = `\n            ^XA\n            ^PW400\n            ^LL200\n            ^FO10,10^A0N,30,30^FDItem Number: ${item.itemNum}^FS\n            ^FO10,50^A0N,30,30^FDItem Name: ${item.itemName}^FS\n            ^FO10,100^BY2,2,50\n            ^BCN,N,N,N,N,D^FD${item.itemName}^FS\n            ^FO10,170^A0N,25,25^FDPrice: $${item.price}^FS\n            ^XZ\n        `;\n\n    // Send the ZPL code to the Zebra printer\n    const printUrl = `http://${printerIp}/zpl`;\n    axios.post(printUrl, zpl, {\n      headers: {\n        'Content-Type': 'text/plain'\n      }\n    }).then(response => {\n      console.log('Label sent to printer:', response);\n    }).catch(error => {\n      console.error('Error sending label to printer:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Label Printer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Printer IP Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: printerIp,\n          onChange: e => setPrinterIp(e.target.value),\n          placeholder: \"Enter printer IP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: labelData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [item.itemName, \" - $\", item.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => printLabel(item),\n          children: \"Print Label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, item.itemNum, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(LabelPrinter, \"mzU9p9pZYehuFuDI+kaGI1qyNIY=\");\n_c = LabelPrinter;\nexport default LabelPrinter;\nvar _c;\n$RefreshReg$(_c, \"LabelPrinter\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","LabelPrinter","_s","labelData","setLabelData","printerIp","setPrinterIp","fetchLabelData","response","get","data","error","console","printLabel","item","zpl","itemNum","itemName","price","printUrl","post","headers","then","log","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/prati/Portal/my-app/src/LabelPrinter.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LabelPrinter = () => {\r\n    const [labelData, setLabelData] = useState([]);\r\n    const [printerIp, setPrinterIp] = useState(''); // State to hold printer IP\r\n\r\n    useEffect(() => {\r\n        // Fetch label data from the API\r\n        const fetchLabelData = async () => {\r\n            try {\r\n                const response = await axios.get('http://127.0.0.1:5000/api/label_data');\r\n                setLabelData(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching label data:', error);\r\n            }\r\n        };\r\n\r\n        fetchLabelData();\r\n    }, []);\r\n\r\n    const printLabel = (item) => {\r\n        // Create ZPL code with the item data\r\n        const zpl = `\r\n            ^XA\r\n            ^PW400\r\n            ^LL200\r\n            ^FO10,10^A0N,30,30^FDItem Number: ${item.itemNum}^FS\r\n            ^FO10,50^A0N,30,30^FDItem Name: ${item.itemName}^FS\r\n            ^FO10,100^BY2,2,50\r\n            ^BCN,N,N,N,N,D^FD${item.itemName}^FS\r\n            ^FO10,170^A0N,25,25^FDPrice: $${item.price}^FS\r\n            ^XZ\r\n        `;\r\n\r\n        // Send the ZPL code to the Zebra printer\r\n        const printUrl = `http://${printerIp}/zpl`;\r\n\r\n        axios.post(printUrl, zpl, {\r\n            headers: {\r\n                'Content-Type': 'text/plain',\r\n            },\r\n        })\r\n        .then(response => {\r\n            console.log('Label sent to printer:', response);\r\n        })\r\n        .catch(error => {\r\n            console.error('Error sending label to printer:', error);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Label Printer</h1>\r\n            <div>\r\n                <label>\r\n                    Printer IP Address:\r\n                    <input \r\n                        type=\"text\" \r\n                        value={printerIp} \r\n                        onChange={(e) => setPrinterIp(e.target.value)} \r\n                        placeholder=\"Enter printer IP\" \r\n                    />\r\n                </label>\r\n            </div>\r\n            <ul>\r\n                {labelData.map(item => (\r\n                    <li key={item.itemNum}>\r\n                        <span>{item.itemName} - ${item.price}</span>\r\n                        <button onClick={() => printLabel(item)}>Print Label</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LabelPrinter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}