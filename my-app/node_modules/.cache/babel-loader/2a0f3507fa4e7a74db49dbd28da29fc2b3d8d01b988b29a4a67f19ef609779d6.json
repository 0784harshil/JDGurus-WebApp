{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\Portal\\\\my-app\\\\src\\\\Inventory.js\",\n  _s = $RefreshSig$();\n// src/Inventory.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container, Typography, CircularProgress, Alert, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inventory = () => {\n  _s();\n  const [inventory, setInventory] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchInventory = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/inventory');\n        setInventory(response.data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchInventory();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Inventory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), inventory.map(item => /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: '10px',\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [\"Quantity: \", item.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [\"Price: $\", item.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Inventory, \"gBcpxKk0t/iA57h6E3ZL/0uxx3M=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Typography","CircularProgress","Alert","Paper","jsxDEV","_jsxDEV","Inventory","_s","inventory","setInventory","error","setError","loading","setLoading","fetchInventory","response","get","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","style","marginTop","variant","gutterBottom","map","item","padding","marginBottom","name","quantity","price","id","_c","$RefreshReg$"],"sources":["C:/Users/prati/Portal/my-app/src/Inventory.js"],"sourcesContent":["// src/Inventory.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    Container,\r\n    Typography,\r\n    CircularProgress,\r\n    Alert,\r\n    Paper,\r\n} from '@mui/material';\r\n\r\nconst Inventory = () => {\r\n    const [inventory, setInventory] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchInventory = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/inventory');\r\n                setInventory(response.data);\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchInventory();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return (\r\n            <Container>\r\n                <CircularProgress />\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Container>\r\n                <Alert severity=\"error\">Error: {error}</Alert>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container style={{ marginTop: '20px' }}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n                Inventory\r\n            </Typography>\r\n            {/* Render inventory items here */}\r\n            {inventory.map(item => (\r\n                <Paper key={item.id} style={{ padding: '10px', marginBottom: '10px' }}>\r\n                    <Typography variant=\"body1\">{item.name}</Typography>\r\n                    <Typography variant=\"body2\">Quantity: {item.quantity}</Typography>\r\n                    <Typography variant=\"body2\">Price: ${item.price}</Typography>\r\n                </Paper>\r\n            ))}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Inventory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}