{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\Portal\\\\my-app\\\\src\\\\LabelPrinter.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container, Typography, TextField, Button, List, ListItem, ListItemText, ListItemSecondaryAction, Snackbar, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LabelPrinter = () => {\n  _s();\n  const [labelData, setLabelData] = useState([]);\n  const [printerIp, setPrinterIp] = useState('');\n  const [itemNum, setItemNum] = useState(''); // State for item number input\n  const [quantity, setQuantity] = useState(1); // State for quantity input\n  const [selectedItem, setSelectedItem] = useState(null); // State for selected item\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  useEffect(() => {\n    const fetchLabelData = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/label_data');\n        setLabelData(response.data);\n      } catch (error) {\n        console.error('Error fetching label data:', error);\n      }\n    };\n    fetchLabelData();\n  }, []);\n  const handleItemNumChange = e => {\n    const inputItemNum = e.target.value;\n    setItemNum(inputItemNum);\n\n    // Find the item based on itemNum\n    const foundItem = labelData.find(item => item.itemNum === inputItemNum);\n    setSelectedItem(foundItem || null);\n  };\n  const printLabel = () => {\n    if (!selectedItem) {\n      setSnackbarMessage('Item not found.');\n      setSnackbarOpen(true);\n      return;\n    }\n    const zpl = `\n            ^XA\n            ^PW400\n            ^LL200\n            ^FO10,10^A0N,30,30^FDItem Number: ${selectedItem.itemNum}^FS\n            ^FO10,50^A0N,30,30^FDItem Name: ${selectedItem.itemName}^FS\n            ^FO10,100^BY2,2,50\n            ^BCN,N,N,N,N,D^FD${selectedItem.itemName}^FS\n            ^FO10,170^A0N,25,25^FDPrice: $${selectedItem.price}^FS\n            ^XZ\n        `;\n\n    // Print the specified quantity of labels\n    for (let i = 0; i < quantity; i++) {\n      const printUrl = `http://${printerIp}/zpl`;\n      axios.post(printUrl, zpl, {\n        headers: {\n          'Content-Type': 'text/plain'\n        }\n      }).then(response => {\n        setSnackbarMessage(`Label sent to printer successfully! (${i + 1}/${quantity})`);\n        setSnackbarOpen(true);\n      }).catch(error => {\n        console.error('Error sending label to printer:', error);\n        setSnackbarMessage('Error sending label to printer.');\n        setSnackbarOpen(true);\n      });\n    }\n  };\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Label Printer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Printer IP Address\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: printerIp,\n      onChange: e => setPrinterIp(e.target.value),\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Item Number\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: itemNum,\n      onChange: handleItemNumChange,\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), selectedItem && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: [\"Selected Item: \", selectedItem.itemName, \" - $\", selectedItem.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Quantity\",\n      type: \"number\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: quantity,\n      onChange: e => setQuantity(e.target.value),\n      style: {\n        marginBottom: '20px'\n      },\n      inputProps: {\n        min: 1\n      } // Prevent negative or zero values\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: printLabel,\n      disabled: !selectedItem // Disable if no item is selected\n      ,\n      children: \"Print Label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 6000,\n      onClose: handleSnackbarClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackbarClose,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(LabelPrinter, \"3W5osuDgIPjxSS1iX6eVPfeVR5A=\");\n_c = LabelPrinter;\nexport default LabelPrinter;\nvar _c;\n$RefreshReg$(_c, \"LabelPrinter\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Typography","TextField","Button","List","ListItem","ListItemText","ListItemSecondaryAction","Snackbar","Alert","jsxDEV","_jsxDEV","LabelPrinter","_s","labelData","setLabelData","printerIp","setPrinterIp","itemNum","setItemNum","quantity","setQuantity","selectedItem","setSelectedItem","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","fetchLabelData","response","get","data","error","console","handleItemNumChange","e","inputItemNum","target","value","foundItem","find","item","printLabel","zpl","itemName","price","i","printUrl","post","headers","then","catch","handleSnackbarClose","maxWidth","style","marginTop","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","onChange","marginBottom","type","inputProps","min","color","onClick","disabled","open","autoHideDuration","onClose","severity","sx","width","_c","$RefreshReg$"],"sources":["C:/Users/prati/Portal/my-app/src/LabelPrinter.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    Container,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemSecondaryAction,\r\n    Snackbar,\r\n    Alert\r\n} from '@mui/material';\r\n\r\nconst LabelPrinter = () => {\r\n    const [labelData, setLabelData] = useState([]);\r\n    const [printerIp, setPrinterIp] = useState('');\r\n    const [itemNum, setItemNum] = useState(''); // State for item number input\r\n    const [quantity, setQuantity] = useState(1); // State for quantity input\r\n    const [selectedItem, setSelectedItem] = useState(null); // State for selected item\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n    const [snackbarMessage, setSnackbarMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchLabelData = async () => {\r\n            try {\r\n                const response = await axios.get('http://127.0.0.1:5000/api/label_data');\r\n                setLabelData(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching label data:', error);\r\n            }\r\n        };\r\n\r\n        fetchLabelData();\r\n    }, []);\r\n\r\n    const handleItemNumChange = (e) => {\r\n        const inputItemNum = e.target.value;\r\n        setItemNum(inputItemNum);\r\n\r\n        // Find the item based on itemNum\r\n        const foundItem = labelData.find(item => item.itemNum === inputItemNum);\r\n        setSelectedItem(foundItem || null);\r\n    };\r\n\r\n    const printLabel = () => {\r\n        if (!selectedItem) {\r\n            setSnackbarMessage('Item not found.');\r\n            setSnackbarOpen(true);\r\n            return;\r\n        }\r\n\r\n        const zpl = `\r\n            ^XA\r\n            ^PW400\r\n            ^LL200\r\n            ^FO10,10^A0N,30,30^FDItem Number: ${selectedItem.itemNum}^FS\r\n            ^FO10,50^A0N,30,30^FDItem Name: ${selectedItem.itemName}^FS\r\n            ^FO10,100^BY2,2,50\r\n            ^BCN,N,N,N,N,D^FD${selectedItem.itemName}^FS\r\n            ^FO10,170^A0N,25,25^FDPrice: $${selectedItem.price}^FS\r\n            ^XZ\r\n        `;\r\n\r\n        // Print the specified quantity of labels\r\n        for (let i = 0; i < quantity; i++) {\r\n            const printUrl = `http://${printerIp}/zpl`;\r\n\r\n            axios.post(printUrl, zpl, {\r\n                headers: {\r\n                    'Content-Type': 'text/plain',\r\n                },\r\n            })\r\n            .then(response => {\r\n                setSnackbarMessage(`Label sent to printer successfully! (${i + 1}/${quantity})`);\r\n                setSnackbarOpen(true);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error sending label to printer:', error);\r\n                setSnackbarMessage('Error sending label to printer.');\r\n                setSnackbarOpen(true);\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSnackbarClose = () => {\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" style={{ marginTop: '20px' }}>\r\n            <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n                Label Printer\r\n            </Typography>\r\n            <TextField\r\n                label=\"Printer IP Address\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={printerIp}\r\n                onChange={(e) => setPrinterIp(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            <TextField\r\n                label=\"Item Number\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={itemNum}\r\n                onChange={handleItemNumChange}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            {selectedItem && (\r\n                <div>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Selected Item: {selectedItem.itemName} - ${selectedItem.price}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <TextField\r\n                label=\"Quantity\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={quantity}\r\n                onChange={(e) => setQuantity(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n                inputProps={{ min: 1 }} // Prevent negative or zero values\r\n            />\r\n            <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                onClick={printLabel}\r\n                disabled={!selectedItem} // Disable if no item is selected\r\n            >\r\n                Print Label\r\n            </Button>\r\n            <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleSnackbarClose}>\r\n                <Alert onClose={handleSnackbarClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    {snackbarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default LabelPrinter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}