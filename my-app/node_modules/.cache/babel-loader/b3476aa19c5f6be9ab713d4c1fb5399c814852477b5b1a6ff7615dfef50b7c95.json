{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\Portal\\\\my-app\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, TextField, Button, Snackbar, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const handleLogin = () => {\n    // Simulate a login process\n    if (username === 'admin' && password === 'password') {\n      // Replace with actual authentication logic\n      const currentTime = new Date().getTime();\n      const sessionDuration = 30 * 60 * 1000; // 30 minutes in milliseconds\n      localStorage.setItem('isLoggedIn', 'true');\n      localStorage.setItem('loginTime', currentTime.toString());\n      onLoginSuccess();\n    } else {\n      setSnackbarMessage('Invalid username or password.');\n      setSnackbarOpen(true);\n    }\n  };\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Username\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      type: \"password\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleLogin,\n      disabled: !username || !password // Disable if fields are empty\n      ,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 6000,\n      onClose: handleSnackbarClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackbarClose,\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"I/q+tNbdc2KqH+dQcjT+raWb1n8=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Container","Typography","TextField","Button","Snackbar","Alert","jsxDEV","_jsxDEV","Login","onLoginSuccess","_s","username","setUsername","password","setPassword","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","handleLogin","currentTime","Date","getTime","sessionDuration","localStorage","setItem","toString","handleSnackbarClose","maxWidth","style","marginTop","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","e","target","marginBottom","type","color","onClick","disabled","open","autoHideDuration","onClose","severity","sx","width","_c","$RefreshReg$"],"sources":["C:/Users/prati/Portal/my-app/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Container,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    Snackbar,\r\n    Alert\r\n} from '@mui/material';\r\n\r\nconst Login = ({ onLoginSuccess }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n    const [snackbarMessage, setSnackbarMessage] = useState('');\r\n\r\n    const handleLogin = () => {\r\n        // Simulate a login process\r\n        if (username === 'admin' && password === 'password') { // Replace with actual authentication logic\r\n            const currentTime = new Date().getTime();\r\n            const sessionDuration = 30 * 60 * 1000; // 30 minutes in milliseconds\r\n            localStorage.setItem('isLoggedIn', 'true');\r\n            localStorage.setItem('loginTime', currentTime.toString());\r\n            onLoginSuccess();\r\n        } else {\r\n            setSnackbarMessage('Invalid username or password.');\r\n            setSnackbarOpen(true);\r\n        }\r\n    };\r\n\r\n    const handleSnackbarClose = () => {\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" style={{ marginTop: '20px' }}>\r\n            <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n                Login\r\n            </Typography>\r\n            <TextField\r\n                label=\"Username\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                onClick={handleLogin}\r\n                disabled={!username || !password} // Disable if fields are empty\r\n            >\r\n                Login\r\n            </Button>\r\n            <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleSnackbarClose}>\r\n                <Alert onClose={handleSnackbarClose} severity=\"error\" sx={{ width: '100%' }}>\r\n                    {snackbarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}