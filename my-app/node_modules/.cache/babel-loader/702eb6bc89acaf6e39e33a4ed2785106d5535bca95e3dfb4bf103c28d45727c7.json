{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\Portal\\\\my-app\\\\src\\\\EditProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, TextField, Button, Snackbar, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditProfile = ({\n  onEditSuccess\n}) => {\n  _s();\n  const [serverName, setServerName] = useState('');\n  const [databaseName, setDatabaseName] = useState('');\n  const [storeId, setStoreId] = useState('');\n  const [adminPassword, setAdminPassword] = useState('');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  useEffect(() => {\n    // Load the profile information from local storage\n    const profile = JSON.parse(localStorage.getItem('userProfile'));\n    if (profile) {\n      setServerName(profile.serverName);\n      setDatabaseName(profile.databaseName);\n      setStoreId(profile.storeId);\n      setAdminPassword(profile.adminPassword);\n    }\n  }, []);\n  const handleUpdateProfile = () => {\n    // Save the updated profile information to local storage\n    const updatedProfile = {\n      serverName,\n      databaseName,\n      storeId,\n      adminPassword\n    };\n    localStorage.setItem('userProfile', JSON.stringify(updatedProfile));\n\n    // Call the onEditSuccess callback to notify the parent component\n    onEditSuccess();\n\n    // Show success message\n    setSnackbarMessage('Profile updated successfully!');\n    setSnackbarOpen(true);\n  };\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Edit Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Server Name\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: serverName,\n      onChange: e => setServerName(e.target.value),\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Database Name\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: databaseName,\n      onChange: e => setDatabaseName(e.target.value),\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Store ID\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: storeId,\n      onChange: e => setStoreId(e.target.value),\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Admin Password\",\n      type: \"password\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: adminPassword,\n      onChange: e => setAdminPassword(e.target.value),\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleUpdateProfile,\n      disabled: !serverName || !databaseName || !storeId || !adminPassword // Disable if fields are empty\n      ,\n      children: \"Update Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 6000,\n      onClose: handleSnackbarClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackbarClose,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(EditProfile, \"sXOWH5DovKNB7bfWhpBZB3M61Ys=\");\n_c = EditProfile;\nexport default EditProfile;\nvar _c;\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","TextField","Button","Snackbar","Alert","jsxDEV","_jsxDEV","EditProfile","onEditSuccess","_s","serverName","setServerName","databaseName","setDatabaseName","storeId","setStoreId","adminPassword","setAdminPassword","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","profile","JSON","parse","localStorage","getItem","handleUpdateProfile","updatedProfile","setItem","stringify","handleSnackbarClose","maxWidth","style","marginTop","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","e","target","marginBottom","type","color","onClick","disabled","open","autoHideDuration","onClose","severity","sx","width","_c","$RefreshReg$"],"sources":["C:/Users/prati/Portal/my-app/src/EditProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Container,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    Snackbar,\r\n    Alert\r\n} from '@mui/material';\r\n\r\nconst EditProfile = ({ onEditSuccess }) => {\r\n    const [serverName, setServerName] = useState('');\r\n    const [databaseName, setDatabaseName] = useState('');\r\n    const [storeId, setStoreId] = useState('');\r\n    const [adminPassword, setAdminPassword] = useState('');\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n    const [snackbarMessage, setSnackbarMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Load the profile information from local storage\r\n        const profile = JSON.parse(localStorage.getItem('userProfile'));\r\n        if (profile) {\r\n            setServerName(profile.serverName);\r\n            setDatabaseName(profile.databaseName);\r\n            setStoreId(profile.storeId);\r\n            setAdminPassword(profile.adminPassword);\r\n        }\r\n    }, []);\r\n\r\n    const handleUpdateProfile = () => {\r\n        // Save the updated profile information to local storage\r\n        const updatedProfile = {\r\n            serverName,\r\n            databaseName,\r\n            storeId,\r\n            adminPassword\r\n        };\r\n        localStorage.setItem('userProfile', JSON.stringify(updatedProfile));\r\n\r\n        // Call the onEditSuccess callback to notify the parent component\r\n        onEditSuccess();\r\n\r\n        // Show success message\r\n        setSnackbarMessage('Profile updated successfully!');\r\n        setSnackbarOpen(true);\r\n    };\r\n\r\n    const handleSnackbarClose = () => {\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" style={{ marginTop: '20px' }}>\r\n            <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n                Edit Profile\r\n            </Typography>\r\n            <TextField\r\n                label=\"Server Name\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={serverName}\r\n                onChange={(e) => setServerName(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            <TextField\r\n                label=\"Database Name\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={databaseName}\r\n                onChange={(e) => setDatabaseName(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            <TextField\r\n                label=\"Store ID\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={storeId}\r\n                onChange={(e) => setStoreId(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            <TextField\r\n                label=\"Admin Password\"\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={adminPassword}\r\n                onChange={(e) => setAdminPassword(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                onClick={handleUpdateProfile}\r\n                disabled={!serverName || !databaseName || !storeId || !adminPassword} // Disable if fields are empty\r\n            >\r\n                Update Profile\r\n            </Button>\r\n            <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleSnackbarClose}>\r\n                <Alert onClose={handleSnackbarClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    {snackbarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default EditProfile;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACIC,SAAS,EACTC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,QAAQ,EACRC,KAAK,QACF,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACuB,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMwB,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;IAC/D,IAAIJ,OAAO,EAAE;MACTX,aAAa,CAACW,OAAO,CAACZ,UAAU,CAAC;MACjCG,eAAe,CAACS,OAAO,CAACV,YAAY,CAAC;MACrCG,UAAU,CAACO,OAAO,CAACR,OAAO,CAAC;MAC3BG,gBAAgB,CAACK,OAAO,CAACN,aAAa,CAAC;IAC3C;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,mBAAmB,GAAGA,CAAA,KAAM;IAC9B;IACA,MAAMC,cAAc,GAAG;MACnBlB,UAAU;MACVE,YAAY;MACZE,OAAO;MACPE;IACJ,CAAC;IACDS,YAAY,CAACI,OAAO,CAAC,aAAa,EAAEN,IAAI,CAACO,SAAS,CAACF,cAAc,CAAC,CAAC;;IAEnE;IACApB,aAAa,CAAC,CAAC;;IAEf;IACAa,kBAAkB,CAAC,+BAA+B,CAAC;IACnDF,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMY,mBAAmB,GAAGA,CAAA,KAAM;IAC9BZ,eAAe,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,oBACIb,OAAA,CAACP,SAAS;IAACiC,QAAQ,EAAC,IAAI;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAClD7B,OAAA,CAACN,UAAU;MAACoC,OAAO,EAAC,IAAI;MAACC,KAAK,EAAC,QAAQ;MAACC,YAAY;MAAAH,QAAA,EAAC;IAErD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbpC,OAAA,CAACL,SAAS;MACN0C,KAAK,EAAC,aAAa;MACnBP,OAAO,EAAC,UAAU;MAClBQ,SAAS;MACTC,KAAK,EAAEnC,UAAW;MAClBoC,QAAQ,EAAGC,CAAC,IAAKpC,aAAa,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CZ,KAAK,EAAE;QAAEgB,YAAY,EAAE;MAAO;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFpC,OAAA,CAACL,SAAS;MACN0C,KAAK,EAAC,eAAe;MACrBP,OAAO,EAAC,UAAU;MAClBQ,SAAS;MACTC,KAAK,EAAEjC,YAAa;MACpBkC,QAAQ,EAAGC,CAAC,IAAKlC,eAAe,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACjDZ,KAAK,EAAE;QAAEgB,YAAY,EAAE;MAAO;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFpC,OAAA,CAACL,SAAS;MACN0C,KAAK,EAAC,UAAU;MAChBP,OAAO,EAAC,UAAU;MAClBQ,SAAS;MACTC,KAAK,EAAE/B,OAAQ;MACfgC,QAAQ,EAAGC,CAAC,IAAKhC,UAAU,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CZ,KAAK,EAAE;QAAEgB,YAAY,EAAE;MAAO;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFpC,OAAA,CAACL,SAAS;MACN0C,KAAK,EAAC,gBAAgB;MACtBO,IAAI,EAAC,UAAU;MACfd,OAAO,EAAC,UAAU;MAClBQ,SAAS;MACTC,KAAK,EAAE7B,aAAc;MACrB8B,QAAQ,EAAGC,CAAC,IAAK9B,gBAAgB,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAClDZ,KAAK,EAAE;QAAEgB,YAAY,EAAE;MAAO;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFpC,OAAA,CAACJ,MAAM;MACHkC,OAAO,EAAC,WAAW;MACnBe,KAAK,EAAC,SAAS;MACfC,OAAO,EAAEzB,mBAAoB;MAC7B0B,QAAQ,EAAE,CAAC3C,UAAU,IAAI,CAACE,YAAY,IAAI,CAACE,OAAO,IAAI,CAACE,aAAc,CAAC;MAAA;MAAAmB,QAAA,EACzE;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTpC,OAAA,CAACH,QAAQ;MAACmD,IAAI,EAAEpC,YAAa;MAACqC,gBAAgB,EAAE,IAAK;MAACC,OAAO,EAAEzB,mBAAoB;MAAAI,QAAA,eAC/E7B,OAAA,CAACF,KAAK;QAACoD,OAAO,EAAEzB,mBAAoB;QAAC0B,QAAQ,EAAC,SAAS;QAACC,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAxB,QAAA,EACzEf;MAAe;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEpB,CAAC;AAACjC,EAAA,CA9FIF,WAAW;AAAAqD,EAAA,GAAXrD,WAAW;AAgGjB,eAAeA,WAAW;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}