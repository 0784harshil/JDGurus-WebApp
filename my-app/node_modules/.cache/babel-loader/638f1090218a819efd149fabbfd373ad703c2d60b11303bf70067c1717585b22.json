{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\Portal\\\\my-app\\\\src\\\\LabelPrinter.js\",\n  _s = $RefreshSig$();\n// src/LabelPrinter.js\nimport React, { useState } from 'react';\nimport { Container, Typography, TextField, Button, Paper, CssBaseline, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LabelPrinter = () => {\n  _s();\n  const [item, setItem] = useState('');\n  const [quantity, setQuantity] = useState(1);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const handlePrintLabel = () => {\n    // Basic validation\n    if (!item || quantity <= 0) {\n      setError('Please enter a valid item and quantity.');\n      setSuccess(false);\n      return;\n    }\n\n    // Here you would typically send the data to the backend to print the label\n    // For now, we will just simulate a successful print\n    console.log(`Printing label for item: ${item}, Quantity: ${quantity}`);\n    setSuccess(true);\n    setError(null);\n\n    // Reset the form\n    setItem('');\n    setQuantity(1);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: '20px',\n        marginTop: '50px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        children: \"Label Printer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        label: \"Enter Item or Scan Item\",\n        value: item,\n        onChange: e => setItem(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        type: \"number\",\n        label: \"Quantity\",\n        value: quantity,\n        onChange: e => setQuantity(e.target.value),\n        inputProps: {\n          min: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        style: {\n          marginTop: '20px'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        style: {\n          marginTop: '20px'\n        },\n        children: \"Label printed successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginTop: '20px'\n        },\n        onClick: handlePrintLabel,\n        children: \"Print Label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(LabelPrinter, \"zI185egCwGVrz/hLuPylAntAaI4=\");\n_c = LabelPrinter;\nexport default LabelPrinter;\nvar _c;\n$RefreshReg$(_c, \"LabelPrinter\");","map":{"version":3,"names":["React","useState","Container","Typography","TextField","Button","Paper","CssBaseline","Alert","jsxDEV","_jsxDEV","LabelPrinter","_s","item","setItem","quantity","setQuantity","error","setError","success","setSuccess","handlePrintLabel","console","log","component","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","elevation","style","padding","marginTop","variant","align","margin","required","fullWidth","label","value","onChange","e","target","type","inputProps","min","severity","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/prati/Portal/my-app/src/LabelPrinter.js"],"sourcesContent":["// src/LabelPrinter.js\r\nimport React, { useState } from 'react';\r\nimport {\r\n    Container,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    Paper,\r\n    CssBaseline,\r\n    Alert,\r\n} from '@mui/material';\r\n\r\nconst LabelPrinter = () => {\r\n    const [item, setItem] = useState('');\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [error, setError] = useState(null);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const handlePrintLabel = () => {\r\n        // Basic validation\r\n        if (!item || quantity <= 0) {\r\n            setError('Please enter a valid item and quantity.');\r\n            setSuccess(false);\r\n            return;\r\n        }\r\n\r\n        // Here you would typically send the data to the backend to print the label\r\n        // For now, we will just simulate a successful print\r\n        console.log(`Printing label for item: ${item}, Quantity: ${quantity}`);\r\n        setSuccess(true);\r\n        setError(null);\r\n\r\n        // Reset the form\r\n        setItem('');\r\n        setQuantity(1);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <Paper elevation={3} style={{ padding: '20px', marginTop: '50px' }}>\r\n                <Typography variant=\"h5\" align=\"center\">\r\n                    Label Printer\r\n                </Typography>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Enter Item or Scan Item\"\r\n                    value={item}\r\n                    onChange={(e) => setItem(e.target.value)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label=\"Quantity\"\r\n                    value={quantity}\r\n                    onChange={(e) => setQuantity(e.target.value)}\r\n                    inputProps={{ min: 1 }}\r\n                />\r\n                {error && <Alert severity=\"error\" style={{ marginTop: '20px' }}>{error}</Alert>}\r\n                {success && <Alert severity=\"success\" style={{ marginTop: '20px' }}>Label printed successfully!</Alert>}\r\n                <Button\r\n                    type=\"button\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ marginTop: '20px' }}\r\n                    onClick={handlePrintLabel}\r\n                >\r\n                    Print Label\r\n                </Button>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default LabelPrinter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}