{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\Portal\\\\my-app\\\\src\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, TextField, Button, Snackbar, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = ({\n  onSignupSuccess\n}) => {\n  _s();\n  const [serverName, setServerName] = useState('');\n  const [databaseName, setDatabaseName] = useState('');\n  const [storeId, setStoreId] = useState('');\n  const [adminPassword, setAdminPassword] = useState('');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const handleSignup = () => {\n    // Save the profile information to local storage\n    const profile = {\n      serverName,\n      databaseName,\n      storeId,\n      adminPassword\n    };\n    localStorage.setItem('userProfile', JSON.stringify(profile));\n\n    // Call the onSignupSuccess callback to notify the parent component\n    onSignupSuccess();\n\n    // Show success message\n    setSnackbarMessage('Profile saved successfully!');\n    setSnackbarOpen(true);\n  };\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Server Name\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: serverName,\n      onChange: e => setServerName(e.target.value),\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Database Name\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: databaseName,\n      onChange: e => setDatabaseName(e.target.value),\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Store ID\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: storeId,\n      onChange: e => setStoreId(e.target.value),\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Admin Password\",\n      type: \"password\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: adminPassword,\n      onChange: e => setAdminPassword(e.target.value),\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSignup,\n      disabled: !serverName || !databaseName || !storeId || !adminPassword // Disable if fields are empty\n      ,\n      children: \"Save Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 6000,\n      onClose: handleSnackbarClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackbarClose,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Signup, \"PvYaOAKslSYqgOA2FkSwCz/DQXk=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Container","Typography","TextField","Button","Snackbar","Alert","jsxDEV","_jsxDEV","Signup","onSignupSuccess","_s","serverName","setServerName","databaseName","setDatabaseName","storeId","setStoreId","adminPassword","setAdminPassword","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","handleSignup","profile","localStorage","setItem","JSON","stringify","handleSnackbarClose","maxWidth","style","marginTop","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","e","target","marginBottom","type","color","onClick","disabled","open","autoHideDuration","onClose","severity","sx","width","_c","$RefreshReg$"],"sources":["C:/Users/prati/Portal/my-app/src/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Container,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    Snackbar,\r\n    Alert\r\n} from '@mui/material';\r\n\r\nconst Signup = ({ onSignupSuccess }) => {\r\n    const [serverName, setServerName] = useState('');\r\n    const [databaseName, setDatabaseName] = useState('');\r\n    const [storeId, setStoreId] = useState('');\r\n    const [adminPassword, setAdminPassword] = useState('');\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n    const [snackbarMessage, setSnackbarMessage] = useState('');\r\n\r\n    const handleSignup = () => {\r\n        // Save the profile information to local storage\r\n        const profile = {\r\n            serverName,\r\n            databaseName,\r\n            storeId,\r\n            adminPassword\r\n        };\r\n        localStorage.setItem('userProfile', JSON.stringify(profile));\r\n\r\n        // Call the onSignupSuccess callback to notify the parent component\r\n        onSignupSuccess();\r\n\r\n        // Show success message\r\n        setSnackbarMessage('Profile saved successfully!');\r\n        setSnackbarOpen(true);\r\n    };\r\n\r\n    const handleSnackbarClose = () => {\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" style={{ marginTop: '20px' }}>\r\n            <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n                Signup\r\n            </Typography>\r\n            <TextField\r\n                label=\"Server Name\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={serverName}\r\n                onChange={(e) => setServerName(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            <TextField\r\n                label=\"Database Name\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={databaseName}\r\n                onChange={(e) => setDatabaseName(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            <TextField\r\n                label=\"Store ID\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={storeId}\r\n                onChange={(e) => setStoreId(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            <TextField\r\n                label=\"Admin Password\"\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={adminPassword}\r\n                onChange={(e) => setAdminPassword(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                onClick={handleSignup}\r\n                disabled={!serverName || !databaseName || !storeId || !adminPassword} // Disable if fields are empty\r\n            >\r\n                Save Profile\r\n            </Button>\r\n            <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleSnackbarClose}>\r\n                <Alert onClose={handleSnackbarClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    {snackbarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Signup;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACIC,SAAS,EACTC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,QAAQ,EACRC,KAAK,QACF,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACsB,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMwB,YAAY,GAAGA,CAAA,KAAM;IACvB;IACA,MAAMC,OAAO,GAAG;MACZb,UAAU;MACVE,YAAY;MACZE,OAAO;MACPE;IACJ,CAAC;IACDQ,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC,CAAC;;IAE5D;IACAf,eAAe,CAAC,CAAC;;IAEjB;IACAa,kBAAkB,CAAC,6BAA6B,CAAC;IACjDF,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;IAC9BT,eAAe,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,oBACIb,OAAA,CAACP,SAAS;IAAC8B,QAAQ,EAAC,IAAI;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAClD1B,OAAA,CAACN,UAAU;MAACiC,OAAO,EAAC,IAAI;MAACC,KAAK,EAAC,QAAQ;MAACC,YAAY;MAAAH,QAAA,EAAC;IAErD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbjC,OAAA,CAACL,SAAS;MACNuC,KAAK,EAAC,aAAa;MACnBP,OAAO,EAAC,UAAU;MAClBQ,SAAS;MACTC,KAAK,EAAEhC,UAAW;MAClBiC,QAAQ,EAAGC,CAAC,IAAKjC,aAAa,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CZ,KAAK,EAAE;QAAEgB,YAAY,EAAE;MAAO;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFjC,OAAA,CAACL,SAAS;MACNuC,KAAK,EAAC,eAAe;MACrBP,OAAO,EAAC,UAAU;MAClBQ,SAAS;MACTC,KAAK,EAAE9B,YAAa;MACpB+B,QAAQ,EAAGC,CAAC,IAAK/B,eAAe,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACjDZ,KAAK,EAAE;QAAEgB,YAAY,EAAE;MAAO;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFjC,OAAA,CAACL,SAAS;MACNuC,KAAK,EAAC,UAAU;MAChBP,OAAO,EAAC,UAAU;MAClBQ,SAAS;MACTC,KAAK,EAAE5B,OAAQ;MACf6B,QAAQ,EAAGC,CAAC,IAAK7B,UAAU,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CZ,KAAK,EAAE;QAAEgB,YAAY,EAAE;MAAO;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFjC,OAAA,CAACL,SAAS;MACNuC,KAAK,EAAC,gBAAgB;MACtBO,IAAI,EAAC,UAAU;MACfd,OAAO,EAAC,UAAU;MAClBQ,SAAS;MACTC,KAAK,EAAE1B,aAAc;MACrB2B,QAAQ,EAAGC,CAAC,IAAK3B,gBAAgB,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAClDZ,KAAK,EAAE;QAAEgB,YAAY,EAAE;MAAO;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFjC,OAAA,CAACJ,MAAM;MACH+B,OAAO,EAAC,WAAW;MACnBe,KAAK,EAAC,SAAS;MACfC,OAAO,EAAE3B,YAAa;MACtB4B,QAAQ,EAAE,CAACxC,UAAU,IAAI,CAACE,YAAY,IAAI,CAACE,OAAO,IAAI,CAACE,aAAc,CAAC;MAAA;MAAAgB,QAAA,EACzE;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTjC,OAAA,CAACH,QAAQ;MAACgD,IAAI,EAAEjC,YAAa;MAACkC,gBAAgB,EAAE,IAAK;MAACC,OAAO,EAAEzB,mBAAoB;MAAAI,QAAA,eAC/E1B,OAAA,CAACF,KAAK;QAACiD,OAAO,EAAEzB,mBAAoB;QAAC0B,QAAQ,EAAC,SAAS;QAACC,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAxB,QAAA,EACzEZ;MAAe;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEpB,CAAC;AAAC9B,EAAA,CAnFIF,MAAM;AAAAkD,EAAA,GAANlD,MAAM;AAqFZ,eAAeA,MAAM;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}