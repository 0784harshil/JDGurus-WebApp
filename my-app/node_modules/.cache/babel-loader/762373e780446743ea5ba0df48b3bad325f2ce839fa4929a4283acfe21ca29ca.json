{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Container,Typography,TextField,Button,Snackbar,Alert}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EditProfile=_ref=>{let{onEditSuccess}=_ref;const[serverName,setServerName]=useState('');const[databaseName,setDatabaseName]=useState('');const[storeId,setStoreId]=useState('');const[adminPassword,setAdminPassword]=useState('');const[snackbarOpen,setSnackbarOpen]=useState(false);const[snackbarMessage,setSnackbarMessage]=useState('');useEffect(()=>{// Load the profile information from local storage\nconst profile=JSON.parse(localStorage.getItem('userProfile'));if(profile){setServerName(profile.serverName);setDatabaseName(profile.databaseName);setStoreId(profile.storeId);setAdminPassword(profile.adminPassword);}},[]);const handleUpdateProfile=()=>{// Save the updated profile information to local storage\nconst updatedProfile={serverName,databaseName,storeId,adminPassword};localStorage.setItem('userProfile',JSON.stringify(updatedProfile));// Call the onEditSuccess callback to notify the parent component\nonEditSuccess();// Show success message\nsetSnackbarMessage('Profile updated successfully!');setSnackbarOpen(true);};const handleSnackbarClose=()=>{setSnackbarOpen(false);};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"sm\",style:{marginTop:'20px'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",align:\"center\",gutterBottom:true,children:\"Edit Profile\"}),/*#__PURE__*/_jsx(TextField,{label:\"Server Name\",variant:\"outlined\",fullWidth:true,value:serverName,onChange:e=>setServerName(e.target.value),style:{marginBottom:'20px'}}),/*#__PURE__*/_jsx(TextField,{label:\"Database Name\",variant:\"outlined\",fullWidth:true,value:databaseName,onChange:e=>setDatabaseName(e.target.value),style:{marginBottom:'20px'}}),/*#__PURE__*/_jsx(TextField,{label:\"Store ID\",variant:\"outlined\",fullWidth:true,value:storeId,onChange:e=>setStoreId(e.target.value),style:{marginBottom:'20px'}}),/*#__PURE__*/_jsx(TextField,{label:\"Admin Password\",type:\"password\",variant:\"outlined\",fullWidth:true,value:adminPassword,onChange:e=>setAdminPassword(e.target.value),style:{marginBottom:'20px'}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleUpdateProfile,disabled:!serverName||!databaseName||!storeId||!adminPassword// Disable if fields are empty\n,children:\"Update Profile\"}),/*#__PURE__*/_jsx(Snackbar,{open:snackbarOpen,autoHideDuration:6000,onClose:handleSnackbarClose,children:/*#__PURE__*/_jsx(Alert,{onClose:handleSnackbarClose,severity:\"success\",sx:{width:'100%'},children:snackbarMessage})})]});};export default EditProfile;","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","TextField","Button","Snackbar","Alert","jsx","_jsx","jsxs","_jsxs","EditProfile","_ref","onEditSuccess","serverName","setServerName","databaseName","setDatabaseName","storeId","setStoreId","adminPassword","setAdminPassword","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","profile","JSON","parse","localStorage","getItem","handleUpdateProfile","updatedProfile","setItem","stringify","handleSnackbarClose","maxWidth","style","marginTop","children","variant","align","gutterBottom","label","fullWidth","value","onChange","e","target","marginBottom","type","color","onClick","disabled","open","autoHideDuration","onClose","severity","sx","width"],"sources":["C:/Users/prati/Portal/my-app/src/EditProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Container,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    Snackbar,\r\n    Alert\r\n} from '@mui/material';\r\n\r\nconst EditProfile = ({ onEditSuccess }) => {\r\n    const [serverName, setServerName] = useState('');\r\n    const [databaseName, setDatabaseName] = useState('');\r\n    const [storeId, setStoreId] = useState('');\r\n    const [adminPassword, setAdminPassword] = useState('');\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n    const [snackbarMessage, setSnackbarMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Load the profile information from local storage\r\n        const profile = JSON.parse(localStorage.getItem('userProfile'));\r\n        if (profile) {\r\n            setServerName(profile.serverName);\r\n            setDatabaseName(profile.databaseName);\r\n            setStoreId(profile.storeId);\r\n            setAdminPassword(profile.adminPassword);\r\n        }\r\n    }, []);\r\n\r\n    const handleUpdateProfile = () => {\r\n        // Save the updated profile information to local storage\r\n        const updatedProfile = {\r\n            serverName,\r\n            databaseName,\r\n            storeId,\r\n            adminPassword\r\n        };\r\n        localStorage.setItem('userProfile', JSON.stringify(updatedProfile));\r\n\r\n        // Call the onEditSuccess callback to notify the parent component\r\n        onEditSuccess();\r\n\r\n        // Show success message\r\n        setSnackbarMessage('Profile updated successfully!');\r\n        setSnackbarOpen(true);\r\n    };\r\n\r\n    const handleSnackbarClose = () => {\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" style={{ marginTop: '20px' }}>\r\n            <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n                Edit Profile\r\n            </Typography>\r\n            <TextField\r\n                label=\"Server Name\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={serverName}\r\n                onChange={(e) => setServerName(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            <TextField\r\n                label=\"Database Name\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={databaseName}\r\n                onChange={(e) => setDatabaseName(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            <TextField\r\n                label=\"Store ID\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={storeId}\r\n                onChange={(e) => setStoreId(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            <TextField\r\n                label=\"Admin Password\"\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={adminPassword}\r\n                onChange={(e) => setAdminPassword(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                onClick={handleUpdateProfile}\r\n                disabled={!serverName || !databaseName || !storeId || !adminPassword} // Disable if fields are empty\r\n            >\r\n                Update Profile\r\n            </Button>\r\n            <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleSnackbarClose}>\r\n                <Alert onClose={handleSnackbarClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    {snackbarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default EditProfile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}