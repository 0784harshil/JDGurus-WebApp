{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\Portal\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './Login'; // Default import\nimport Dashboard from './Dashboard'; // Import Dashboard component\nimport Navbar from './Navbar'; // Import Navbar component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State to manage login status\n\n  useEffect(() => {\n    // Check if the user is logged in based on sessionStorage\n    const loggedIn = sessionStorage.getItem('isLoggedIn') === 'true';\n    setIsLoggedIn(loggedIn); // Update login status\n  }, []);\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true); // Update login status on successful login\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLoginSuccess: handleLoginSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 64\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Navigate","Login","Dashboard","Navbar","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","loggedIn","sessionStorage","getItem","handleLoginSuccess","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLoginSuccess","to","_c","$RefreshReg$"],"sources":["C:/Users/prati/Portal/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './Login'; // Default import\nimport Dashboard from './Dashboard'; // Import Dashboard component\nimport Navbar from './Navbar'; // Import Navbar component\n\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // State to manage login status\n\n    useEffect(() => {\n        // Check if the user is logged in based on sessionStorage\n        const loggedIn = sessionStorage.getItem('isLoggedIn') === 'true';\n        setIsLoggedIn(loggedIn); // Update login status\n    }, []);\n\n    const handleLoginSuccess = () => {\n        setIsLoggedIn(true); // Update login status on successful login\n    };\n\n    return (\n        <Router>\n            <Navbar isLoggedIn={isLoggedIn} /> {/* Pass isLoggedIn to Navbar */}\n            <Routes>\n                <Route path=\"/\" element={<Login onLoginSuccess={handleLoginSuccess} />} />\n                <Route path=\"/dashboard\" element={isLoggedIn ? <Dashboard /> : <Navigate to=\"/\" />} />\n                {/* Add more routes as needed */}\n            </Routes>\n        </Router>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,KAAK,MAAM,SAAS,CAAC,CAAC;AAC7B,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AACrC,OAAOC,MAAM,MAAM,UAAU,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMe,QAAQ,GAAGC,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM;IAChEH,aAAa,CAACC,QAAQ,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,kBAAkB,GAAGA,CAAA,KAAM;IAC7BJ,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACIJ,OAAA,CAACR,MAAM;IAAAiB,QAAA,gBACHT,OAAA,CAACF,MAAM;MAACK,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eACnCb,OAAA,CAACN,MAAM;MAAAe,QAAA,gBACHT,OAAA,CAACP,KAAK;QAACqB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEf,OAAA,CAACJ,KAAK;UAACoB,cAAc,EAAER;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1Eb,OAAA,CAACP,KAAK;QAACqB,IAAI,EAAC,YAAY;QAACC,OAAO,EAAEZ,UAAU,gBAAGH,OAAA,CAACH,SAAS;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGb,OAAA,CAACL,QAAQ;UAACsB,EAAE,EAAC;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEjB;AAACX,EAAA,CAvBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}