{"ast":null,"code":"// src/Design1.js\nimport React,{useState}from'react';import{Container,Typography,TextField,Button,Paper,CssBaseline,Alert}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Design1=()=>{const[item,setItem]=useState('');const[quantity,setQuantity]=useState(1);const[error,setError]=useState(null);const[success,setSuccess]=useState(false);const handlePrintLabel=()=>{// Basic validation\nif(!item||quantity<=0){setError('Please enter a valid item and quantity.');setSuccess(false);return;}// Here you would typically send the data to the backend to print the label\n// For now, we will just simulate a successful print\nconsole.log(\"Printing label for item: \".concat(item,\", Quantity: \").concat(quantity));setSuccess(true);setError(null);// Reset the form\nsetItem('');setQuantity(1);};return/*#__PURE__*/_jsxs(Container,{component:\"main\",maxWidth:\"xs\",children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsxs(Paper,{elevation:3,style:{padding:'20px',marginTop:'50px'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",align:\"center\",children:\"Barcode Design 1\"}),/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",margin:\"normal\",required:true,fullWidth:true,label:\"Enter Item or Scan Item\",value:item,onChange:e=>setItem(e.target.value)}),/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",margin:\"normal\",required:true,fullWidth:true,type:\"number\",label:\"Quantity\",value:quantity,onChange:e=>setQuantity(e.target.value),inputProps:{min:1}}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",style:{marginTop:'20px'},children:error}),success&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",style:{marginTop:'20px'},children:\"Label printed successfully!\"}),/*#__PURE__*/_jsx(Button,{type:\"button\",fullWidth:true,variant:\"contained\",color:\"primary\",style:{marginTop:'20px'},onClick:handlePrintLabel,children:\"Print Label\"})]})]});};export default Design1;","map":{"version":3,"names":["React","useState","Container","Typography","TextField","Button","Paper","CssBaseline","Alert","jsx","_jsx","jsxs","_jsxs","Design1","item","setItem","quantity","setQuantity","error","setError","success","setSuccess","handlePrintLabel","console","log","concat","component","maxWidth","children","elevation","style","padding","marginTop","variant","align","margin","required","fullWidth","label","value","onChange","e","target","type","inputProps","min","severity","color","onClick"],"sources":["C:/Users/prati/Portal/my-app/src/Design1.js"],"sourcesContent":["// src/Design1.js\r\nimport React, { useState } from 'react';\r\nimport {\r\n    Container,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    Paper,\r\n    CssBaseline,\r\n    Alert,\r\n} from '@mui/material';\r\n\r\nconst Design1 = () => {\r\n    const [item, setItem] = useState('');\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [error, setError] = useState(null);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const handlePrintLabel = () => {\r\n        // Basic validation\r\n        if (!item || quantity <= 0) {\r\n            setError('Please enter a valid item and quantity.');\r\n            setSuccess(false);\r\n            return;\r\n        }\r\n\r\n        // Here you would typically send the data to the backend to print the label\r\n        // For now, we will just simulate a successful print\r\n        console.log(`Printing label for item: ${item}, Quantity: ${quantity}`);\r\n        setSuccess(true);\r\n        setError(null);\r\n\r\n        // Reset the form\r\n        setItem('');\r\n        setQuantity(1);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <Paper elevation={3} style={{ padding: '20px', marginTop: '50px' }}>\r\n                <Typography variant=\"h5\" align=\"center\">\r\n                    Barcode Design 1\r\n                </Typography>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Enter Item or Scan Item\"\r\n                    value={item}\r\n                    onChange={(e) => setItem(e.target.value)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label=\"Quantity\"\r\n                    value={quantity}\r\n                    onChange={(e) => setQuantity(e.target.value)}\r\n                    inputProps={{ min: 1 }}\r\n                />\r\n                {error && <Alert severity=\"error\" style={{ marginTop: '20px' }}>{error}</Alert>}\r\n                {success && <Alert severity=\"success\" style={{ marginTop: '20px' }}>Label printed successfully!</Alert>}\r\n                <Button\r\n                    type=\"button\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ marginTop: '20px' }}\r\n                    onClick={handlePrintLabel}\r\n                >\r\n                    Print Label\r\n                </Button>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Design1;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}